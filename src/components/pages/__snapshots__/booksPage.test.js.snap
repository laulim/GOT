// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <BooksPage/> BooksPage has been rendered 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BooksPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <RandomItem
          btnName="book"
          fieldsList={
            Array [
              Array [
                "numberOfPages",
                "Number of pages",
              ],
              Array [
                "publisher",
                "Publisher",
              ],
              Array [
                "released",
                "Released",
              ],
            ]
          }
          getData={[Function]}
          itemIdInterval={
            Array [
              10,
              1,
            ]
          }
        />,
        <ItemList
          getData={[Function]}
          onItemSelected={[Function]}
          pageDetails={
            Array [
              1,
              5,
            ]
          }
          renderItem={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "btnName": "book",
          "fieldsList": Array [
            Array [
              "numberOfPages",
              "Number of pages",
            ],
            Array [
              "publisher",
              "Publisher",
            ],
            Array [
              "released",
              "Released",
            ],
          ],
          "getData": [Function],
          "itemIdInterval": Array [
            10,
            1,
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "getData": [Function],
          "onItemSelected": [Function],
          "pageDetails": Array [
            1,
            5,
          ],
          "renderItem": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <RandomItem
            btnName="book"
            fieldsList={
              Array [
                Array [
                  "numberOfPages",
                  "Number of pages",
                ],
                Array [
                  "publisher",
                  "Publisher",
                ],
                Array [
                  "released",
                  "Released",
                ],
              ]
            }
            getData={[Function]}
            itemIdInterval={
              Array [
                10,
                1,
              ]
            }
          />,
          <ItemList
            getData={[Function]}
            onItemSelected={[Function]}
            pageDetails={
              Array [
                1,
                5,
              ]
            }
            renderItem={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "btnName": "book",
            "fieldsList": Array [
              Array [
                "numberOfPages",
                "Number of pages",
              ],
              Array [
                "publisher",
                "Publisher",
              ],
              Array [
                "released",
                "Released",
              ],
            ],
            "getData": [Function],
            "itemIdInterval": Array [
              10,
              1,
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "getData": [Function],
            "onItemSelected": [Function],
            "pageDetails": Array [
              1,
              5,
            ],
            "renderItem": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
